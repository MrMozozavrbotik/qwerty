import config
import telebot
from telebot import types
from database import Database

db = Database('db.db')
bot = telebot.TeleBot(config.TOKEN)

def main_menu():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('üë§ –ü–æ–∏—Å–∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞')
    markup.add(btn1)
    return markup

def stop_dialog():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('‚úèÔ∏è –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å')
    btn2 = types.KeyboardButton('/‚ùå–°—Ç–æ–ø')
    markup.add(btn1, btn2)
    return markup

def stop_search():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('‚ùå –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–∏—Å–∫')
    markup.add(btn1)
    return markup

@bot.message_handler(commands = ['start'])
def start(message):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('–Ø –ø–∞—Ä–µ–Ω—å üë®')
        btn2 = types.KeyboardButton('–Ø –¥–µ–≤—É—à–∫–∞ üë©')
        markup.add(btn1, btn2)
        bot.send_message(message.chat.id, '{0.first_name}, –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–Ω–æ–Ω–∏–º–Ω—ã–π —á–∞—Ç!\n–£–∫–∞–∂–∏—Ç–µ –≤–∞—à –ø–æ–ª!'.format(message.from_user), reply_markup = markup)



@bot.message_handler(commands = ['üìú–ú–µ–Ω—é'])
def menu(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('üë§ –ü–æ–∏—Å–∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞')
    markup.add(btn1)
    bot.send_message(message.chat.id, '–ú–µ–Ω—é'.format(message.from_user), reply_markup = markup)

@bot.message_handler(commands = ['‚ùå–°—Ç–æ–ø'])
def stop(message):
    chat_info = db.get_active_chat(message.chat.id)
    if chat_info != False:
        db.delete_chat(chat_info[0])
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('‚úèÔ∏è –°–ª–µ–¥—É—é—â–∏–π –¥–∏–∞–ª–æ–≥')
        btn2 = types.KeyboardButton('/üìú–ú–µ–Ω—é')
        markup.add(btn1, btn2)
        bot.send_message(chat_info[1],'‚ùå –°–æ–±–µ—Å–µ–¥–Ω–∏–∫ –ø–æ–∫–∏–Ω—É–ª —á–∞—Ç', reply_markup = markup)
        bot.send_message(message.chat.id,'‚ùå –í—ã –≤—ã—à–ª–∏ –∏–∑ —á–∞—Ç–∞', reply_markup = markup)
    else:
        bot.send_message(message.chat.id,'‚ùå –í—ã –Ω–µ –Ω–∞—á–∞–ª–∏ —á–∞—Ç', reply_markup = markup)


@bot.message_handler(content_types=['text'])
def bot_message(message):
    if message.chat.type == 'private':
        if message.text == "üë§ –ü–æ–∏—Å–∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞" or message.text == '‚úèÔ∏è –°–ª–µ–¥—É—é—â–∏–π –¥–∏–∞–ª–æ–≥':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn1 = types.KeyboardButton('üîé –†–∞–Ω–¥–æ–º')
            btn2 = types.KeyboardButton('üîé –ü–∞—Ä–µ–Ω—å')
            btn3 = types.KeyboardButton('üîé –î–µ–≤—É—à–∫–∞')
            markup.add(btn1, btn2, btn3)
            bot.send_message(message.chat.id, '–ö–æ–≥–æ –∏—Å–∫–∞—Ç—å?', reply_markup=markup)

        elif message.text == "‚ùå –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–∏—Å–∫":
            db.delete_queue(message.chat.id)
            bot.send_message(message.chat.id, '‚ùå –ü–æ–∏—Å–∫ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.', reply_markup=main_menu())
        
        elif message.text == '‚úèÔ∏è –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å':
            chat_info = db.get_active_chat(message.chat.id)
            if chat_info != False:
                if message.from_user.username:
                    bot.send_message(chat_info[1], '–ü—Ä–æ—Ñ–∏–ª—å –≤–∞—à–µ–≥–æ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞ @' + message.from_user.username)
                    bot.send_message(message.chat.id, '‚úèÔ∏è –í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫—É')
                else:
                    bot.send_message(message.chat.id, '‚ùå –í –≤–∞—à–µ–º –∞–∫–∫–∞—É–Ω—Ç–µ –Ω–µ —É–∫–∞–∑–∞–Ω username!')
            else:
                bot.send_message(message.chat.id, '‚ùå –í—ã –Ω–µ –Ω–∞—á–∞–ª–∏ –¥–∏–∞–ª–æ–≥!')

        elif message.text == 'üîé –†–∞–Ω–¥–æ–º':
            user_info = db.get_chat() # –±–µ—Ä—ë–º —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞ –∫–æ—Ç–æ—Ä—ã–π —Å—Ç–æ–∏—Ç –≤ –æ—á–µ—Ä–µ–¥–∏ –ø–µ—Ä–≤—ã–º
            chat_two = user_info[0]

            if db.create_chat(message.chat.id, chat_two) == False:
                db.add_queue(message.chat.id, db.get_gender(message.chat.id))
                bot.send_message(message.chat.id, 'üëª –ü–æ–∏—Å–∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞', reply_markup = stop_search())
            else:
                msg = '–°–æ–±–µ—Å–µ–¥–Ω–∏–∫ –Ω–∞–π–¥–µ–Ω.\n–ß—Ç–æ-–±—ã –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–∏–∞–ª–æ–≥, –Ω–∞–ø–∏—à–∏—Ç–µ: /‚ùå–°—Ç–æ–ø'
                bot.send_message(message.chat.id, msg, reply_markup=stop_dialog())
                bot.send_message(chat_two, msg, reply_markup=stop_dialog())

        elif message.text == 'üîé –ü–∞—Ä–µ–Ω—å':
            user_info = db.get_gender_chat('male')
            chat_two = user_info[0]
            if db.create_chat(message.chat.id, chat_two) == False:
                db.add_queue(message.chat.id, db.get_gender(message.chat.id))
                bot.send_message(message.chat.id, 'üëª –ü–æ–∏—Å–∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞', reply_markup = stop_search())
            else:
                msg = '–°–æ–±–µ—Å–µ–¥–Ω–∏–∫ –Ω–∞–π–¥–µ–Ω.\n–ß—Ç–æ-–±—ã –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–∏–∞–ª–æ–≥, –Ω–∞–ø–∏—à–∏—Ç–µ: /‚ùå–°—Ç–æ–ø'
                bot.send_message(message.chat.id, msg, reply_markup=stop_dialog())
                bot.send_message(chat_two, msg, reply_markup=stop_dialog())

        elif message.text == 'üîé –î–µ–≤—É—à–∫–∞':
            user_info = db.get_gender_chat('female')
            chat_two = user_info[0]
            if db.create_chat(message.chat.id, chat_two) == False:
                db.add_queue(message.chat.id, db.get_gender(message.chat.id))
                bot.send_message(message.chat.id, 'üëª –ü–æ–∏—Å–∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞', reply_markup = stop_search())
            else:
                msg = '–°–æ–±–µ—Å–µ–¥–Ω–∏–∫ –Ω–∞–π–¥–µ–Ω.\n–ß—Ç–æ-–±—ã –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–∏–∞–ª–æ–≥, –Ω–∞–ø–∏—à–∏—Ç–µ: /‚ùå–°—Ç–æ–ø'
                bot.send_message(message.chat.id, msg, reply_markup=stop_dialog())
                bot.send_message(chat_two, msg, reply_markup=stop_dialog())


        elif message.text == '–Ø –ø–∞—Ä–µ–Ω—å üë®':
            if db.set_gender(message.chat.id, 'male'):
                bot.send_message(message.chat.id, '‚úÖ –í–∞—à –ø–æ–ª —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!', reply_markup=main_menu())
            else:
                bot.send_message(message.chat.id, '‚ùå –í—ã —É–∂–µ —É–∫–∞–∑–∞–ª–∏ –ø–æ–ª!', reply_markup=main_menu())

        elif message.text == '–Ø –¥–µ–≤—É—à–∫–∞ üë©':
            if db.set_gender(message.chat.id, 'female'):
                bot.send_message(message.chat.id, '‚úÖ –í–∞—à –ø–æ–ª —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!', reply_markup=main_menu())
            else:
                bot.send_message(message.chat.id, '‚ùå –í—ã —É–∂–µ —É–∫–∞–∑–∞–ª–∏ –ø–æ–ª!', reply_markup=main_menu)

        else:
            try:
                if db.get_active_chat(message.chat.id) != False:
                    chat_info = db.get_active_chat(message.chat.id)
                    bot.send_message(chat_info[1], message.text)
            except TypeError:
                    bot.send_message(message.chat.id, '‚ùå –í—ã –Ω–µ –Ω–∞—á–∞–ª–∏ –¥–∏–∞–ª–æ–≥!')

@bot.message_handler(content_types='sticker')
def bot_stickers(message):
    if message.chat.type == 'private':
        chat_info = db.get_active_chat(message.chat.id)
        file_id = message.sticker.file_id
        try:
            if chat_info != False:
                chat_info = db.get_active_chat(message.chat.id)
                bot.send_sticker(chat_info[1], file_id)
        except TypeError:
                bot.send_message(message.chat.id, '‚ùå –í—ã –Ω–µ –Ω–∞—á–∞–ª–∏ –¥–∏–∞–ª–æ–≥!')

@bot.message_handler(content_types='voice')
def bot_voice(message):
    if message.chat.type == 'private':
        chat_info = db.get_active_chat(message.chat.id)
        file_id = message.voice.file_id
        try:
            if chat_info != False:
                chat_info = db.get_active_chat(message.chat.id)
                bot.send_voice(chat_info[1], file_id)
        except TypeError:
                bot.send_message(message.chat.id, '‚ùå –í—ã –Ω–µ –Ω–∞—á–∞–ª–∏ –¥–∏–∞–ª–æ–≥!')

@bot.message_handler(content_types='photo')
def bot_photo(message):
    if message.chat.type == 'private':
        chat_info = db.get_active_chat(message.chat.id)
        file_id = message.photo[-1].file_id
        try:
            if chat_info != False:
                chat_info = db.get_active_chat(message.chat.id)
                bot.send_photo(chat_info[1], file_id)
        except TypeError:
                bot.send_message(message.chat.id, '‚ùå –í—ã –Ω–µ –Ω–∞—á–∞–ª–∏ –¥–∏–∞–ª–æ–≥!')

@bot.message_handler(content_types='audio')
def bot_audio(message):
    if message.chat.type == 'private':
        chat_info = db.get_active_chat(message.chat.id)
        file_id = message.audio.file_id
        try:
            if chat_info != False:
                chat_info = db.get_active_chat(message.chat.id)
                bot.send_audio(chat_info[1], file_id)
        except TypeError:
                bot.send_message(message.chat.id, '‚ùå –í—ã –Ω–µ –Ω–∞—á–∞–ª–∏ –¥–∏–∞–ª–æ–≥!')

@bot.message_handler(content_types='videonote')
def bot_videonote(message):
    if message.chat.type == 'private':
        chat_info = db.get_active_chat(message.chat.id)
        file_id = message.video_note.file_id
        try:
            if chat_info != False:
                chat_info = db.get_active_chat(message.chat.id)
                bot.send_video_note(chat_info[1], file_id)
        except TypeError:
                bot.send_message(message.chat.id, '‚ùå –í—ã –Ω–µ –Ω–∞—á–∞–ª–∏ –¥–∏–∞–ª–æ–≥!')

bot.polling(none_stop = True)